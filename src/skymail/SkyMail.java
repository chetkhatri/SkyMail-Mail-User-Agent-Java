/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package skymail;

import java.awt.Font;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.security.UnrecoverableEntryException;
import java.sql.*;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chetan
 */
public class SkyMail extends javax.swing.JFrame {

    /**
     * Creates new form SkyMail
     */
     Statement st;
    ResultSet rs;
    PreparedStatement pst;
    module ml=new module();
    public static String USER_ID;
    public static String USER_PWD;
    public String acc_name;
    int acc_Id;
    public String accType;
    public String  inHost;
    public String outHost;
    public int inPort;
    public int outPort;
    public String flag="All";
    
    int i;
    int row;
    String currentFolder="INBOX";
    String reFrom;
    String reSubject;
    
    DefaultTableModel model;
    public SkyMail() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH); 
       
        ml.conn();
       fetchCredential();
    
         StringTokenizer stk=new StringTokenizer(txtUnread.getText(), "Unread :");
            while(stk.hasMoreTokens())
            {
                btnInbox.setText(btnInbox.getText()+"("+ stk.nextElement().toString() +")");
            
                
                break;
            } 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homescreen = new javax.swing.JDesktopPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        btnInbox = new javax.swing.JButton();
        btnDraft = new javax.swing.JButton();
        btnSent = new javax.swing.JButton();
        btnTrash = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbInbox = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnReply = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblFrom = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMsgContent = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        btnGetMails = new javax.swing.JButton();
        btnCompose = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cmbFlags = new javax.swing.JComboBox();
        txtsearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtUnread = new javax.swing.JLabel();
        txtTotal = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        txtUnread1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miNewmail = new javax.swing.JMenuItem();
        miGetMails = new javax.swing.JMenuItem();
        miReply = new javax.swing.JMenuItem();
        miForward = new javax.swing.JMenuItem();
        miDelete = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        miAddNewAc = new javax.swing.JMenuItem();
        miAccPref = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome to SkyMail");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(140, 598));

        btnInbox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Inbox.png"))); // NOI18N
        btnInbox.setText("Inbox");
        btnInbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInboxActionPerformed(evt);
            }
        });

        btnDraft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/draft.png"))); // NOI18N
        btnDraft.setText("Drafts");
        btnDraft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDraftActionPerformed(evt);
            }
        });

        btnSent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/send_email.png"))); // NOI18N
        btnSent.setText("Sent");
        btnSent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSentActionPerformed(evt);
            }
        });

        btnTrash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/RecycleBin.png"))); // NOI18N
        btnTrash.setText("Trash");
        btnTrash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrashActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnDraft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnTrash, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
            .addComponent(btnInbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnInbox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDraft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTrash)
                .addContainerGap(409, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDraft, btnInbox, btnSent, btnTrash});

        jSplitPane1.setLeftComponent(jPanel1);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tbInbox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "Subject", "Date", "Size (KB)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbInbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbInboxMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbInbox);

        btnReply.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reply.png"))); // NOI18N
        btnReply.setText("Reply");
        btnReply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplyActionPerformed(evt);
            }
        });

        btnForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/forward.png"))); // NOI18N
        btnForward.setText("Foward");
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/remove.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblFrom.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblFrom.setText("From :");

        lblSubject.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblSubject.setText("Subject :");

        lblTo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblTo.setText("To:");

        lblTime.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFrom)
                    .addComponent(lblSubject))
                .addGap(136, 136, 136)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTime)
                    .addComponent(lblTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReply)
                .addGap(18, 18, 18)
                .addComponent(btnForward)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(159, 159, 159))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnForward, btnReply});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnReply, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnForward)
                        .addComponent(btnDelete))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFrom)
                            .addComponent(lblTo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSubject)
                            .addComponent(lblTime)))))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnForward, btnReply});

        jScrollPane2.setViewportView(txtMsgContent);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        jSplitPane1.setBounds(0, 60, 1370, 600);
        homescreen.add(jSplitPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel3.setAlignmentX(0.0F);
        jPanel3.setAlignmentY(0.0F);

        btnGetMails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/incoming.png"))); // NOI18N
        btnGetMails.setText("Get Mails");
        btnGetMails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetMailsActionPerformed(evt);
            }
        });

        btnCompose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/compose.png"))); // NOI18N
        btnCompose.setText("Compose");
        btnCompose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComposeActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        cmbFlags.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Recent", "Seen", "Answered", "Deleted", "Draft" }));
        cmbFlags.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFlagsItemStateChanged(evt);
            }
        });
        cmbFlags.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFlagsActionPerformed(evt);
            }
        });

        txtsearch.setText("Search..");
        txtsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtsearchMouseClicked(evt);
            }
        });
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtsearchFocusLost(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btnGetMails)
                .addGap(31, 31, 31)
                .addComponent(btnCompose)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(cmbFlags, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(574, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGetMails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCompose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtsearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFlags, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbFlags, txtsearch});

        jPanel3.setBounds(0, 0, 1370, 60);
        homescreen.add(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtUnread.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtUnread.setText("Unread :");

        txtTotal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtTotal.setText("Total :");

        jProgressBar1.setMaximum(101);

        txtUnread1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtUnread1.setText("SkyMail © 2013, Copy Rights, All Right Reserved. Design And Developed By Chetan Khatri. ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUnread1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142)
                .addComponent(txtUnread)
                .addGap(58, 58, 58)
                .addComponent(txtTotal)
                .addGap(183, 183, 183))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUnread1)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUnread)
                        .addComponent(txtTotal))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel4.setBounds(0, 658, 1370, 50);
        homescreen.add(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu1.setText("File");

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Message");

        miNewmail.setText("Compose New Mail");
        miNewmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewmailActionPerformed(evt);
            }
        });
        jMenu2.add(miNewmail);

        miGetMails.setText("Get Mails");
        miGetMails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGetMailsActionPerformed(evt);
            }
        });
        jMenu2.add(miGetMails);

        miReply.setText("Reply");
        miReply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miReplyActionPerformed(evt);
            }
        });
        jMenu2.add(miReply);

        miForward.setText("Forward");
        miForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miForwardActionPerformed(evt);
            }
        });
        jMenu2.add(miForward);

        miDelete.setText("Delete");
        miDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDeleteActionPerformed(evt);
            }
        });
        jMenu2.add(miDelete);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Settings");

        miAddNewAc.setText("Add New Account");
        miAddNewAc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAddNewAcActionPerformed(evt);
            }
        });
        jMenu3.add(miAddNewAc);

        miAccPref.setText("Account Preferances");
        miAccPref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAccPrefActionPerformed(evt);
            }
        });
        jMenu3.add(miAccPref);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("About");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homescreen, javax.swing.GroupLayout.DEFAULT_SIZE, 1370, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homescreen, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void fetchCredential()
    {
        try
        {
            st=ml.con.createStatement();
            rs=st.executeQuery("select count(*) as id from dbskymail.tbaccount");
            rs.last();
            //System.out.println(rs.getInt("id"));
            if(rs.getInt("id")==0)
            {
                JOptionPane.showMessageDialog(null,"There is no Email Account found\nPlease add new account","Error",JOptionPane.ERROR_MESSAGE);
                dlAccount da=new dlAccount(new javax.swing.JFrame(), true);
                da.setVisible(true);
               
            }
            else if(rs.getInt("id")>0)
            {
            //fetching all credential data from DB   
        st=ml.con.createStatement();
        rs=st.executeQuery("select * from dbskymail.tbaccount where status="+ 1 +"");
        rs.last();
        USER_ID=rs.getString("acc_mail");
        USER_PWD=rs.getString("acc_pwd");
        acc_name=rs.getString("acc_name");
        accType=rs.getString("acc_type");
        inHost=rs.getString("acc_inchost");
        outHost=rs.getString("acc_outhost");
        inPort=rs.getInt("inport");
        outPort=rs.getInt("outport");
        acc_Id=rs.getInt("acc_id");
        //calling getMail methods
        ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"INBOX",0,txtMsgContent,jProgressBar1);
            }
            
            
            
         
        
        }catch(Exception ex){System.out.println(ex);}
    }
    
    
  
//Insert Mails Data to local database
 private void storeMsg(String folder,String fld_id)
 {
     
    try
     {
      st=ml.con.createStatement();
      rs=st.executeQuery("select count(*) as id from "+folder);
      rs.last();
      if(rs.getInt("id")>0)
      {
         
          if(module.internetCon==0)
          {
         pst=ml.con.prepareStatement("delete from "+folder+" where "+fld_id+"="+ acc_Id +"");
         pst.execute();
          }
          
      }
      
//       for(int i=tbInbox.getRowCount()-1;i>=0;i--)
     for(int i=0;i<=tbInbox.getRowCount()-1;i++)
    {
         String msgFrom=tbInbox.getModel().getValueAt(i, 0).toString();
         String msgSub=tbInbox.getModel().getValueAt(i, 1).toString();
         String msgDte=tbInbox.getModel().getValueAt(i, 2).toString();
         String msgSize=tbInbox.getModel().getValueAt(i, 3).toString();
         
//         System.out.println(msgFrom+"\n"+msgSub+"\n"+msgDte+"\n"+msgSize+"\n"+msgContent);
         pst=ml.con.prepareStatement("insert into "+folder+" values ("+acc_Id+",'"+msgFrom+"','"+msgSub+"','"+msgDte+"','"+msgSize+"')");

         pst.execute();
         
     }
     //JOptionPane.showMessageDialog(null, "Messages Stored Successfully!");
     }catch(Exception ex){JOptionPane.showMessageDialog(this, ex);}

//     System.out.println(tbInbox.getModel().getValueAt(0, 4).toString());
 
 } 
    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtsearchMouseClicked
        // TODO add your handling code here:
        txtsearch.setText("");
    }//GEN-LAST:event_txtsearchMouseClicked

    private void txtsearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtsearchFocusLost
        // TODO add your handling code here:
        txtsearch.setText("Search..");
    }//GEN-LAST:event_txtsearchFocusLost

    private void miReplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miReplyActionPerformed
        // TODO add your handling code here:
         if(lblFrom.getText().equals("From :"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Message","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        newCompose nc=new newCompose();
        nc.txtTo.setText(reFrom);
        nc.txtSub.setText("Re: "+reSubject);
        nc.setVisible(true);
        nc.txtMsg.requestFocus();
        }
    }//GEN-LAST:event_miReplyActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_miExitActionPerformed

    private void miAddNewAcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAddNewAcActionPerformed
        // TODO add your handling code here:

        dlAccount newac=new dlAccount(new javax.swing.JFrame(),true);
       
        newac.setVisible(true);
        
    }//GEN-LAST:event_miAddNewAcActionPerformed

    private void miAccPrefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAccPrefActionPerformed
        // TODO add your handling code here:
                accPrefernace accp=new accPrefernace(new javax.swing.JFrame(),true);
        accp.setVisible(true);
    }//GEN-LAST:event_miAccPrefActionPerformed

    private void miNewmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewmailActionPerformed
        ml.checkacc();
    }//GEN-LAST:event_miNewmailActionPerformed

    private void btnComposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComposeActionPerformed
        // TODO add your handling code here:
        ml.checkacc();
    }//GEN-LAST:event_btnComposeActionPerformed

    private void btnGetMailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetMailsActionPerformed
        // TODO add your handling code here:
        try
        {
            
        st=ml.con.createStatement();
        rs=st.executeQuery("select * from dbskymail.tbaccount where status="+ 1 +"");
        rs.last();
        USER_ID=rs.getString("acc_mail");
        USER_PWD=rs.getString("acc_pwd");
        acc_name=rs.getString("acc_name");
        accType=rs.getString("acc_type");
        inHost=rs.getString("acc_inchost");
        outHost=rs.getString("acc_outhost");
        inPort=rs.getInt("inport");
        outPort=rs.getInt("outport");
        acc_Id=rs.getInt("acc_id");
        
        }catch(Exception ex){}
        ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"INBOX",0,txtMsgContent,jProgressBar1);
        
    }//GEN-LAST:event_btnGetMailsActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        module.proFlag=1;
        if(module.internetCon==0)
        {
        storeMsg("tbinbox","inbox_id");
        }
       
      
       
         
    }//GEN-LAST:event_formWindowOpened

    private void tbInboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbInboxMouseClicked
        // TODO add your handling code here:
        try
        {   
           
            row=tbInbox.getSelectedRow();
            
            System.out.println(row);
            //ml.unread=0;
            
           lblFrom.setText("From :"+ml.htmlBroker(tbInbox.getModel().getValueAt(row, 0).toString()));
           
            lblSubject.setText("Subject : "+ml.htmlBroker(tbInbox.getModel().getValueAt(row, 1).toString()));
            lblTime.setText(ml.htmlBroker(tbInbox.getModel().getValueAt(row, 2).toString()));
            
            reFrom=ml.replyBroker(tbInbox.getModel().getValueAt(row, 0).toString());
            reSubject=ml.replyBroker(tbInbox.getModel().getValueAt(row, 1).toString());
            
            
            lblTo.setText("To: Me");
            lblTo.setFont(new Font("Verdana", Font.BOLD, 12));
            lblTime.setFont(new Font("Verdana", Font.PLAIN,12));
           int total= tbInbox.getRowCount();
           row=total-row;
            ml.unread=2;
           ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,"Unread",currentFolder,row,txtMsgContent,jProgressBar1);
           module.attachText=0;
        }
        catch(Exception ex)
        {
            //JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_tbInboxMouseClicked

    private void cmbFlagsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFlagsItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbFlagsItemStateChanged

    private void cmbFlagsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFlagsActionPerformed
        // TODO add your handling code here:
        ml.unread=0;
       ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,cmbFlags.getSelectedItem().toString(),"INBOX",0,jProgressBar1);
    }//GEN-LAST:event_cmbFlagsActionPerformed

    private void btnDraftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDraftActionPerformed
        // TODO add your handling code here:
      if(module.internetCon==1)
       {
           ml.retrieveMsg("tbdrafts", tbInbox);
       }
        else
       {
        currentFolder="DRAFTS";
        ml.unread=0;  
        ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"DRAFTS",0,jProgressBar1);
        storeMsg("tbdrafts", "draft_id");
       }
    }//GEN-LAST:event_btnDraftActionPerformed

    private void btnInboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInboxActionPerformed
        // TODO add your handling code here:
       if(module.internetCon==1)
       {
           ml.retrieveMsg("tbinbox", tbInbox);
       }
        else
       {
           currentFolder="INBOX";
        ml.unread=0;  
        ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"INBOX",0,jProgressBar1);
        storeMsg("tbinbox", "inbox_id");
       }
        
    }//GEN-LAST:event_btnInboxActionPerformed

    private void btnSentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSentActionPerformed
        // TODO add your handling code here:
        if(module.internetCon==1)
       {
           ml.retrieveMsg("tbsent", tbInbox);
       }
        else
       {
        
       currentFolder="SENT";
       ml.unread=0;  
       ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"SENT",0,jProgressBar1);
        storeMsg("tbsent", "sent_id");
       }
    }//GEN-LAST:event_btnSentActionPerformed

    private void btnTrashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrashActionPerformed
        // TODO add your handling code here:

        if(module.internetCon==1)
       {
           ml.retrieveMsg("tbtrash", tbInbox);
       }
        else
       { 
        
      
      currentFolder="TRASH";
      ml.unread=0;
      ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"TRASH",0,jProgressBar1);
      storeMsg("tbtrash", "trash_id");
       }
    }//GEN-LAST:event_btnTrashActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
         if(lblFrom.getText().equals("From :"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Message","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        
        int md=JOptionPane.showConfirmDialog(this, "Are you Sure to Delete?","Confirmation",JOptionPane.OK_CANCEL_OPTION);
        if(md==JOptionPane.OK_OPTION)
        {
             ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,"Delete",currentFolder,row,jProgressBar1);
           clearAll();
        }
        
        }      
          
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplyActionPerformed
        // TODO add your handling code here:
        
         if(lblFrom.getText().equals("From :"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Message","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        newCompose nc=new newCompose();
        nc.txtTo.setText(reFrom);
        nc.txtSub.setText("Re: "+reSubject);
        nc.setVisible(true);
        nc.txtMsg.requestFocus();
        }
    }//GEN-LAST:event_btnReplyActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
        
         if(evt.getKeyCode()== KeyEvent.VK_ENTER)
        {
            
            ml.searchMail(accType, inPort, inHost, USER_ID, USER_PWD, tbInbox, txtUnread, txtTotal, currentFolder,txtsearch.getText().toString());
            clearAll();
        }
    }//GEN-LAST:event_txtsearchKeyPressed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
        About a=new About(new javax.swing.JFrame(),true);
        a.setVisible(true);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
       if((txtsearch.getText().equals(""))||(txtsearch.getText().equals("Search..")))
       {
           JOptionPane.showMessageDialog(null,"Please Enter Keyword to Search","Error",JOptionPane.ERROR_MESSAGE);
       }
       else{
        ml.searchMail(accType, inPort, inHost, USER_ID, USER_PWD, tbInbox, txtUnread, txtTotal, currentFolder,txtsearch.getText().toString());
        clearAll();}
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed
        // TODO add your handling code here:
         
        if(lblFrom.getText().equals("From :"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Message","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            newCompose nc=new newCompose();
       
        nc.txtSub.setText("Fwd: "+reSubject);
        nc.txtMsg.setText(txtMsgContent.getText());
        nc.setVisible(true);
        nc.txtTo.requestFocus();
        }
        
    }//GEN-LAST:event_btnForwardActionPerformed

    private void miGetMailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGetMailsActionPerformed
        // TODO add your handling code here:
        try
        {
            
        st=ml.con.createStatement();
        rs=st.executeQuery("select * from dbskymail.tbaccount where status="+ 1 +"");
        rs.last();
        USER_ID=rs.getString("acc_mail");
        USER_PWD=rs.getString("acc_pwd");
        acc_name=rs.getString("acc_name");
        accType=rs.getString("acc_type");
        inHost=rs.getString("acc_inchost");
        outHost=rs.getString("acc_outhost");
        inPort=rs.getInt("inport");
        outPort=rs.getInt("outport");
        acc_Id=rs.getInt("acc_id");
        
        }catch(Exception ex){}
        ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,flag,"INBOX",0,txtMsgContent,jProgressBar1);
        
    }//GEN-LAST:event_miGetMailsActionPerformed

    private void miForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miForwardActionPerformed
        // TODO add your handling code here:
         if(lblFrom.getText().equals("From :"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Message","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            newCompose nc=new newCompose();
       
        nc.txtSub.setText("Fwd: "+reSubject);
        nc.txtMsg.setText(txtMsgContent.getText());
        nc.setVisible(true);
        nc.txtTo.requestFocus();
        }
    }//GEN-LAST:event_miForwardActionPerformed

    private void miDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDeleteActionPerformed
        // TODO add your handling code here:
        if(lblFrom.getText().equals("From :"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Message","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        
        int md=JOptionPane.showConfirmDialog(this, "Are you Sure to Delete?","Confirmation",JOptionPane.OK_CANCEL_OPTION);
        if(md==JOptionPane.OK_OPTION)
        {
             ml.getMail(accType,inPort,inHost,USER_ID,USER_PWD,tbInbox,txtUnread,txtTotal,"Delete",currentFolder,row,jProgressBar1);
           clearAll();
        }
        
        }      
          
        
    }//GEN-LAST:event_miDeleteActionPerformed
    private void clearAll()
    {
         lblFrom.setText("From : ");
           lblSubject.setText("Subject : ");
           lblTime.setText("");
           lblTo.setText("To: ");
           txtMsgContent.setText("");
    }
      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SkyMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SkyMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SkyMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SkyMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SkyMail().setVisible(true);
            }
        });
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDraft;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnGetMails;
    private javax.swing.JButton btnInbox;
    private javax.swing.JButton btnReply;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSent;
    private javax.swing.JButton btnTrash;
    private javax.swing.JComboBox cmbFlags;
    private javax.swing.JDesktopPane homescreen;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTo;
    private javax.swing.JMenuItem miAccPref;
    private javax.swing.JMenuItem miAddNewAc;
    private javax.swing.JMenuItem miDelete;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miForward;
    private javax.swing.JMenuItem miGetMails;
    private javax.swing.JMenuItem miNewmail;
    private javax.swing.JMenuItem miReply;
    private javax.swing.JTable tbInbox;
    private javax.swing.JEditorPane txtMsgContent;
    private javax.swing.JLabel txtTotal;
    private javax.swing.JLabel txtUnread;
    private javax.swing.JLabel txtUnread1;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}

